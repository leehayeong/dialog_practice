<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.DialogPractice" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->

        <!-- 다이얼로그 스타일 지정방법 2. 테마에 default style - alertDialogTheme 지정 -->
        <!-- <item name="android:dialogTheme">?alertDialogTheme</item> -->
    </style>

    <!-- 다이얼로그 스타일 저장방법 1. style 선언하고 dialogFragment 에서 getTheme() override 할 때 사용 -->
    <style name="CustomAlertDialog">
        <!-- 커스텀뷰 적용을 위해 백그라운드 투명 적용-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowMinWidthMajor">90%</item>
        <item name="android:windowMinWidthMinor">90%</item>

        <!-- 바깥영역 터치 시 dismiss 처리 -->
        <item name="android:windowCloseOnTouchOutside">true</item>

        <!-- Dialog 가 센터에 나오도록 -->
        <item name="android:windowIsFloating">true</item>
    </style>
</resources>